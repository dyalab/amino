if HAVE_COMMON_LISP

bin_PROGRAMS += aarx.core
dist_bin_SCRIPTS += share/aarxc share/aarxpy

# Keep this list in sync with amino.asd
aarx_core_SOURCES = \
	lisp/package.lisp \
	lisp/util.lisp \
	lisp/config-macro.lisp \
	lisp/basic-type.lisp \
	lisp/grovel.lisp \
	lisp/tf-grovel.lisp \
	lisp/ffi.lisp \
	lisp/mat/mat-grovel.lisp \
	lisp/mat/mat-macro.lisp \
	lisp/mat/mat-lib.lisp \
	lisp/mat/mat-init.lisp \
	lisp/mat/mat-blas.lisp \
	lisp/mat/mat-la.lisp \
	lisp/basic-ops.lisp \
	lisp/foreign.lisp \
	lisp/libc.lisp \
	lisp/op.lisp \
	lisp/generic.lisp \
	lisp/blas-generic.lisp \
	lisp/mem.lisp \
        lisp/mem-type.lisp \
        lisp/ct-type.lisp \
        lisp/ct.lisp \
	lisp/sparse.lisp \
	lisp/io.lisp \
	lisp/tf-type.lisp \
	lisp/tf.lisp \
	lisp/tf-op.lisp \
	lisp/rx/robray-package.lisp \
	lisp/rx/rx-grovel.lisp \
	lisp/rx/sdl-grovel.lisp \
	lisp/rx/rx-lib.lisp \
	lisp/rx/rx-type.lisp \
	lisp/rx/geom-bind.lisp \
	lisp/rx/sg-cfun.lisp \
	lisp/rx/rx-sg.lisp \
	lisp/rx/rx-gl.lisp \
	lisp/rx/rx-win.lisp \
	lisp/rx/rx-cl.lisp \
	lisp/rx/rx-ct.lisp \
	lisp/rx/rx-mp.lisp \
	lisp/rx/rx-ik.lisp \
	lisp/rx/util.lisp \
	lisp/rx/mesh.lisp \
	lisp/rx/wavefront.lisp \
	lisp/rx/parameters.lisp \
	lisp/rx/povray.lisp \
	lisp/rx/render.lisp \
	lisp/rx/render/mp-render.lisp \
	lisp/rx/scenegraph.lisp \
	lisp/rx/scenefile/urdf.lisp \
	lisp/rx/lexer.lisp \
	lisp/rx/inex.lisp \
	lisp/rx/scenefile/curly.lisp \
	lisp/rx/scenefile/moveit.lisp \
	lisp/rx/scenefile/scenefile.lisp \
	lisp/rx/animate.lisp \
	lisp/rx/draw.lisp \
	lisp/rx/draw-extra.lisp \
	lisp/rx/trajectory.lisp \
	lisp/rx/driver.lisp \
	lisp/rx/sg-gen.lisp \
	lisp/rx/sg-rope.lisp \
	lisp/rx/config.lisp \
	lisp/py/package.lisp \
	lisp/py/user.lisp \
	lisp/amino-rx.asd \
	lisp/amino-opt.asd \
	lisp/amino-py.asd \
	lisp/amino.asd


nodist_aarx_core_SOURCES = \
	$(top_builddir)/lisp/libdir.lisp \
	$(top_builddir)/lisp/config.lisp

lisp/libdir.lisp: configure
	echo "(in-package :amino) " > lisp/libdir.lisp
	echo "(defparameter *libdir* \"${libdir}\")" >>  lisp/libdir.lisp
	echo "(defparameter *builddir* \"${builddir}\")" >>  lisp/libdir.lisp
	echo "(defparameter *srcdir* \"${srcdir}\")" >>  lisp/libdir.lisp

aarx.core: $(top_srcdir)/share/make-aarx.lisp $(aarx_core_SOURCES) $(nodist_aarx_core_SOURCES) libamino.la libamino-gl.la libamino-collision.la libamino-planning.la libamino-xerbla-nop.la lisp/libdir.lisp
	$(MKDIR_P) lisp/rx/scenefile
	$(MKDIR_P) lisp/rx/render
	$(MKDIR_P) lisp/py
	$(MKDIR_P) lisp/opt
	$(MKDIR_P) lisp/mat
	if test "x$(top_srcdir)" != "x$(top_builddir)"; then \
		for i in $(aarx_core_SOURCES); \
		do \
			cp -v "$(top_srcdir)/$$i" "$(top_builddir)/$$i"; \
		done; \
	fi
	$(top_srcdir)/share/make-aarx.sh $(COMMON_LISP) $(top_srcdir) $(top_builddir)


if HAVE_HELP2MAN
doc/aarxc.1: aarxc aarx.core $(top_srcdir)/share/aarxc $(top_srcdir)/configure.ac
	$(MKDIR_P) doc
	$(HELP2MAN) --version-option=--version-man --no-info -n "Compile scene graphs" $(top_builddir)/aarxc -o $@

dist_man_MANS = doc/aarxc.1

if HAVE_GROFF
EXTRA_DIST += doc/manual/man_aarxc.html
doc/manual/man_aarxc.html: doc/aarxc.1
	$(MKDIR_P) doc/manual
	$(GROFF) -mandoc -Thtml < doc/aarxc.1 > doc/manual/man_aarxc.html

doxygen: doc/manual/man_aarxc.html

endif

endif

endif # HAVE_COMMON_LISP
